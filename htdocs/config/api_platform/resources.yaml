resources:
    App\Entity\Address:
        #attributes:
            #normalization_context:
                #groups: ['name']
            #denormalization_context:
                #groups: ['name']
        collectionOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/addresses'
            post: ~
            special:
                method: 'POST'
                path: '/addresses'
                controller: 'App\Controller\AddressSpecial'
        itemOperations:
            get:
                method: 'GET'
                path: '/addresses/{id}'
                requirements:
                    id: '\d+'
            put:
                method: 'PUT'
                path: '/addresses/{id}'
                requirements:
                    id: '\d+'
            delete:
                method: 'DELETE'
                path: '/addresses/{id}'
                requirements:
                    id: '\d+'
                    
    App\Entity\Card:
        #attributes:
            #normalization_context:
                #groups: ['name']
            #denormalization_context:
                #groups: ['name']
        collectionOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_CUSTOMER")'
                path: '/cards'
            post: ~
            special:
                method: 'POST'
                #access_control: 'is_granted("ROLE_STAFF")'
                path: '/cards'
                controller: 'App\Controller\CardSpecial'
        itemOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_CUSTOMER")'
                path: '/cards/{id}'
                requirements:
                    id: '\d+'
            put:
                method: 'PUT'
                #access_control: 'is_granted("ROLE_STAFF")'
                path: '/cards/{id}'
                requirements:
                    id: '\d+'
            delete:
                method: 'DELETE'
                #access_control: 'is_granted("ROLE_STAFF")'
                path: '/cards/{id}'
                requirements:
                    id: '\d+'

    App\Entity\Customer:
        attributes:
            normalization_context: {groups: ['read']}
            denormalization_context: {groups: ['write']}
        collectionOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_STAFF")'
                path: '/customers'
            register:
                method: 'POST'
                #access_control: 'is_granted("ROLE_ESTABLISHMENT")'
                path: '/customers/register'
                controller: 'App\Controller\User\Register'
            reset_password:
                method: 'POST'
                #access_control: 'is_granted("ROLE_ESTABLISHMENT")'
                path: '/customers/{id}/reset-password'
                controller: 'App\Controller\User\ResetPassword'
                swagger_context:
                    summary: 'Reset Passord'
                    description: 'Generation of new users password'
                    parameters:
                        - {in: path, name: id, required: true, identifier: true, type: string}
                        - in: body
                          name: 'ResetPasswordRequest'
                          schema:
                              type: object
                              required:
                                  - id
                                  - password
                                  - email
                                  - token
                              properties:
                                  email:
                                      type: string
                                  password:
                                      type: string
                                  token:
                                      type: string
        itemOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_CUSTOMER")'
                path: '/customers/{id}'
                requirements:
                    id: '\d+'
            put:
                method: 'PUT'
                #access_control: 'is_granted("ROLE_CUSTOMER")'
                path: '/customers/{id}'
                requirements:
                    id: '\d+'
            delete:
                method: 'DELETE'
                #access_control: 'is_granted("ROLE_CUSTOMER")'
                path: '/customers/{id}'
                requirements:
                    id: '\d+'

    App\Entity\Establishment:
        attributes:
            normalization_context: {groups: ['read']}
            denormalization_context: {groups: ['write']}
        collectionOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_ESTABLISHMENT")'
                path: '/establishments'
            post:
                method: 'POST'
                #access_control: 'is_granted("ROLE_API")'
                path: '/establishments'
        itemOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_ESTABLISHMENT")'
                path: '/establishments/{id}'
                requirements:
                    id: '\d+'
            put:
                method: 'PUT'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/establishments/{id}'
                requirements:
                    id: '\d+'
            delete:
                method: 'DELETE'
                #access_control: 'is_granted("ROLE_API")'
                path: '/establishments/{id}'
                requirements:
                    id: '\d+'

    App\Entity\Role:
        #attributes:
            #normalization_context:
                #groups: ['name']
            #denormalization_context:
                #groups: ['name']
        collectionOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/roles'
            post:
                method: 'POST'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/roles'
        itemOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/roles/{id}'
                requirements:
                    id: '\d+'
            put:
                method: 'PUT'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/roles/{id}'
                requirements:
                    id: '\d+'
            delete:
                method: 'DELETE'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/roles/{id}'
                requirements:
                    id: '\d+'

    App\Entity\Staff:
        #attributes:
            #normalization_context:
                #groups: ['name']
            #denormalization_context:
                #groups: ['name']
        collectionOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/staff'
            post:
                method: 'POST'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/staff'
        itemOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("ROLE_STAFF")'
                path: '/staff/{id}'
                requirements:
                    id: '\d+'
            put:
                method: 'PUT'
                #access_control: 'is_granted("ROLE_STAFF")'
                path: '/staff/{id}'
                requirements:
                    id: '\d+'
            delete:
                method: 'DELETE'
                #access_control: 'is_granted("ROLE_ADMIN")'
                path: '/staff/{id}'
                requirements:
                    id: '\d+'

    App\Entity\Visit:
        #attributes:
            #normalization_context:
                #groups: ['name']
            #denormalization_context:
                #groups: ['name']
        collectionOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("IS_AUTHENTICATED_FULLY")'
                path: '/visits'
            post:
                method: 'POST'
                #access_control: 'is_granted("IS_AUTHENTICATED_FULLY")'
                path: '/visits'
        itemOperations:
            get:
                method: 'GET'
                #access_control: 'is_granted("IS_AUTHENTICATED_FULLY")'
                path: '/visits/{id}'
                requirements:
                    id: '\d+'
            put:
                method: 'PUT'
                #access_control: 'is_granted("IS_AUTHENTICATED_FULLY")'
                path: '/visits/{id}'
                requirements:
                    id: '\d+'
            delete:
                method: 'DELETE'
                #access_control: 'is_granted("IS_AUTHENTICATED_FULLY")'
                path: '/visits/{id}'
                requirements:
                    id: '\d+'
